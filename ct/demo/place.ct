/***************************************

                |\___/|
               ( O . O )
                |     |
                | U U |
               с|__э__э

                  ct

           [ place cotomod ]

               это котэ
          он есть, но его нет
        и он делает магию в html5

***************************************/

ct.place = { 
  'check' : {
    'rect.rect': function (x1,y1,x2,y2,xx1,yy1,xx2,yy2) {
      return((((x1>=xx1&&x1<=xx2)||(x2>=xx1&&x2<=xx2) )&&((y1>=yy1&&y1<=yy2)||(y2>=yy1&&y2<=yy2)))||(((xx1>=x1&&xx1<=x2)||(xx2>=x1&&xx2<=x2))&&((yy1>=y1&&yy1<=y2)||(yy2>=y1&&yy2<=y2))))||((((x1>=xx1&&x1<=xx2)||(x2>=xx1&&x2<=xx2))&&((yy1>=y1&&yy1<=y2)||(yy2>=y1&&yy2<=y2)))||(((xx1>=x1&&xx1<=x2)||(xx2>=x1&&xx2<=x2))&&((y1>=yy1&&y1<=yy2)||(y2>=yy1&&y2<=yy2))));
    },
    'line.line': function (x1,y1,x2,y2,x3,y3,x4,y4) {
      return(((x3-x1)*(y2-y1)-(y3-y1)*(x2-x1))*((x4-x1)*(y2-y1)-(y4-y1)*(x2-x1))<=0)&&(((x1-x3)*(y4-y3)-(y1-y3)*(x4-x3))*((x2-x3)*(y4-y3)-(y2-y3)*(x4-x3))<=0);
    },
    'circle.circle': function (x1,y1,r1,x2,y2,r2) {
      return(Math.abs((x2-x1)*(y2-y1))<=(r1+r2)*(r1+r2));
    },
    'circle.point': function (x1,y1,r1,x2,y2) { 
      return(Math.abs((x2-x1)*(y2-y1))<=r1*r1);
    },
    'circle.rect': function (x1,y1,r1,x2,y2,x3,y3) {
      // давайте будем наивно считать, что все круги в несколько раз больше прямоугольников, а не наоборот =)
      return(Math.abs((x2-x1)*(y2-y1))<=r1*r1 || Math.abs((x2-x1)*(y3-y1))<=r1*r1 || Math.abs((x3-x1)*(y2-y1))<=r1*r1 || Math.abs((x3-x1)*(y3-y1))<=r1*r1);
    },
    'rect.point': function (x1,y1,x2,y2,x3,y3) {
      return((x3>=x1&&x3<=x2&&y3>=y1&&y3<=y2)||(x3<=x1&&x3>=x2&&y3<=y1&&y3>=y2));
    },
  },
  'free': function (me,x,y,type) {
    if (type) {
      for (i in ct.layers) {
        for (k in ct.layers[i]) {
          if (ct.layers[i][k].shape && ct.layers[i][k] !== me && ct.layers[i][k].ctype == type) {
            if (ct.layers[i][k].shape + '.' + me.shape == 'rect.rect') {
              if (ct.place.check['rect.rect'](ct.layers[i][k].x - ct.layers[i][k].left, ct.layers[i][k].y - ct.layers[i][k].top,ct.layers[i][k].x + ct.layers[i][k].right,ct.layers[i][k].y + ct.layers[i][k].bottom,me.x - me.left, me.y - me.top,me.x + me.right,me.y + me.bottom))
                return false;
            } else if (ct.layers[i][k].shape + '.' + me.shape == 'circle.circle') {
              if (ct.place.check['circle.circle'](ct.layers[i][k].x,ct.layers[i][k].y,ct.layers[i][k].r,me.x,me.y,me.r))
                return false;
            } else if (ct.layers[i][k].shape + '.' + me.shape == 'circle.rect') {
              if (ct.place.check['circle.rect'](ct.layers[i][k].x,ct.layers[i][k].y,ct.layers[i][k].r,me.x - me.left, me.y - me.top,me.x + me.right,me.y + me.bottom))
                return false;
            } else if (ct.layers[i][k].shape + '.' + me.shape == 'rect.circle') {
              if (ct.place.check['circle.rect'](me.x,me.y,me.r,ct.layers[i][k].x - ct.layers[i][k].left, ct.layers[i][k].y - ct.layers[i][k].top,ct.layers[i][k].x + ct.layers[i][k].right,ct.layers[i][k].y + ct.layers[i][k].bottom))
                return false;
            } else if (ct.layers[i][k].shape + '.' + me.shape == 'circle.point') {
              if (ct.place.check['circle.point'](ct.layers[i][k].x,ct.layers[i][k].y,ct.layers[i][k].r,me.x,me.y))
                return false;
            } else if (ct.layers[i][k].shape + '.' + me.shape == 'point.circle') {
              if (ct.place.check['circle.point'](me.x,me.y,me.r,ct.layers[i][k].x,ct.layers[i][k].y))
                return false;
            } else if (ct.layers[i][k].shape + '.' + me.shape == 'point.point') { // ну а мало ли что!
              if (ct.layers[i][k].y == me.y && ct.layers[i][k].x == me.x)
                return false;
            } else if (ct.layers[i][k].shape + '.' + me.shape == 'point.rect') {
              if (ct.place.check['circle.point'](me.x - me.left, me.y - me.top,me.x + me.right,me.y + me.bottom,ct.layers[i][k].x,ct.layers[i][k].y))
                return false;
            } else if (ct.layers[i][k].shape + '.' + me.shape == 'rect.point') {
              if (ct.place.check['circle.point'](ct.layers[i][k].x - ct.layers[i][k].left, ct.layers[i][k].y - ct.layers[i][k].top,ct.layers[i][k].x + ct.layers[i][k].right,ct.layers[i][k].y + ct.layers[i][k].bottom,me.x,me.y))
                return false;
            }
          }
        }
      }
    } else {
      for (i in ct.layers) {
        for (k in ct.layers[i]) {
          if (ct.layers[i][k].shape && ct.layers[i][k] !== me) {
            if (ct.layers[i][k].shape + '.' + me.shape == 'rect.rect') {
              if (ct.place.check['rect.rect'](ct.layers[i][k].x - ct.layers[i][k].left, ct.layers[i][k].y - ct.layers[i][k].top,ct.layers[i][k].x + ct.layers[i][k].right,ct.layers[i][k].y + ct.layers[i][k].bottom,me.x - me.left, me.y - me.top,me.x + me.right,me.y + me.bottom))
                return false;
            } else if (ct.layers[i][k].shape + '.' + me.shape == 'circle.circle') {
              if (ct.place.check['circle.circle'](ct.layers[i][k].x,ct.layers[i][k].y,ct.layers[i][k].r,me.x,me.y,me.r))
                return false;
            } else if (ct.layers[i][k].shape + '.' + me.shape == 'circle.rect') {
              if (ct.place.check['circle.rect'](ct.layers[i][k].x,ct.layers[i][k].y,ct.layers[i][k].r,me.x - me.left, me.y - me.top,me.x + me.right,me.y + me.bottom))
                return false;
            } else if (ct.layers[i][k].shape + '.' + me.shape == 'rect.circle') {
              if (ct.place.check['circle.rect'](me.x,me.y,me.r,ct.layers[i][k].x - ct.layers[i][k].left, ct.layers[i][k].y - ct.layers[i][k].top,ct.layers[i][k].x + ct.layers[i][k].right,ct.layers[i][k].y + ct.layers[i][k].bottom))
                return false;
            } else if (ct.layers[i][k].shape + '.' + me.shape == 'circle.point') {
              if (ct.place.check['circle.point'](ct.layers[i][k].x,ct.layers[i][k].y,ct.layers[i][k].r,me.x,me.y))
                return false;
            } else if (ct.layers[i][k].shape + '.' + me.shape == 'point.circle') {
              if (ct.place.check['circle.point'](me.x,me.y,me.r,ct.layers[i][k].x,ct.layers[i][k].y))
                return false;
            } else if (ct.layers[i][k].shape + '.' + me.shape == 'point.point') {
              if (ct.layers[i][k].y == me.y && ct.layers[i][k].x == me.x)
                return false;
            } else if (ct.layers[i][k].shape + '.' + me.shape == 'point.rect') {
              if (ct.place.check['circle.point'](me.x - me.left, me.y - me.top,me.x + me.right,me.y + me.bottom,ct.layers[i][k].x,ct.layers[i][k].y))
                return false;
            } else if (ct.layers[i][k].shape + '.' + me.shape == 'rect.point') {
              if (ct.place.check['circle.point'](ct.layers[i][k].x - ct.layers[i][k].left, ct.layers[i][k].y - ct.layers[i][k].top,ct.layers[i][k].x + ct.layers[i][k].right,ct.layers[i][k].y + ct.layers[i][k].bottom,me.x,me.y))
                return false;
            }
          }
        }
      }
    }
    return true;
  },
  'meet': function (me,x,y,type) {
    for (i in ct.layers) {
      for (k in ct.layers[i]) {
        if (ct.layers[i][k].shape &&ct.layers[i][k]!== me && ct.layers[i][k].type == type) {
          if (ct.layers[i][k].shape + '.' + me.shape == 'rect.rect') {
            if (ct.place.check['rect.rect'](ct.layers[i][k].x - ct.layers[i][k].left, ct.layers[i][k].y - ct.layers[i][k].top,ct.layers[i][k].x + ct.layers[i][k].right,ct.layers[i][k].y + ct.layers[i][k].bottom,me.x - me.left, me.y - me.top,me.x + me.right,me.y + me.bottom))
              return ct.layers[i][k];
          } else if (ct.layers[i][k].shape + '.' + me.shape == 'circle.circle') {
            if (ct.place.check['circle.circle'](ct.layers[i][k].x,ct.layers[i][k].y,ct.layers[i][k].r,me.x,me.y,me.r))
              return ct.layers[i][k];
          } else if (ct.layers[i][k].shape + '.' + me.shape == 'circle.rect') {
            if (ct.place.check['circle.rect'](ct.layers[i][k].x,ct.layers[i][k].y,ct.layers[i][k].r,me.x - me.left, me.y - me.top,me.x + me.right,me.y + me.bottom))
              return ct.layers[i][k];
          } else if (ct.layers[i][k].shape + '.' + me.shape == 'rect.circle') {
            if (ct.place.check['circle.rect'](me.x,me.y,me.r,ct.layers[i][k].x - ct.layers[i][k].left, ct.layers[i][k].y - ct.layers[i][k].top,ct.layers[i][k].x + ct.layers[i][k].right,ct.layers[i][k].y + ct.layers[i][k].bottom))
              return ct.layers[i][k];
          } else if (ct.layers[i][k].shape + '.' + me.shape == 'circle.point') {
            if (ct.place.check['circle.point'](ct.layers[i][k].x,ct.layers[i][k].y,ct.layers[i][k].r,me.x,me.y))
              return ct.layers[i][k];
          } else if (ct.layers[i][k].shape + '.' + me.shape == 'point.circle') {
            if (ct.place.check['circle.point'](me.x,me.y,me.r,ct.layers[i][k].x,ct.layers[i][k].y))
              return ct.layers[i][k];
          } else if (ct.layers[i][k].shape + '.' + me.shape == 'point.point') {
            if (ct.layers[i][k].y == me.y && ct.layers[i][k].x == me.x)
              return ct.layers[i][k];
          } else if (ct.layers[i][k].shape + '.' + me.shape == 'point.rect') {
            if (ct.place.check['circle.point'](me.x - me.left, me.y - me.top,me.x + me.right,me.y + me.bottom,ct.layers[i][k].x,ct.layers[i][k].y))
              return ct.layers[i][k];
          } else if (ct.layers[i][k].shape + '.' + me.shape == 'rect.point') {
            if (ct.place.check['circle.point'](ct.layers[i][k].x - ct.layers[i][k].left, ct.layers[i][k].y - ct.layers[i][k].top,ct.layers[i][k].x + ct.layers[i][k].right,ct.layers[i][k].y + ct.layers[i][k].bottom,me.x,me.y))
              return ct.layers[i][k];
          }
        }
      }
    }
    return false;
  },
};
ct.place.check['rect.circle'] = ct.place.check['circle.rect'];
ct.place.check['point.circle'] = ct.place.check['circle.point'];
ct.place.check['point.rect'] = ct.place.check['rect.point'];

ct.libs += ' place';